{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Screen from \"../components/Screen\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialMessages = [{\n  id: 1,\n  title: \"T1\",\n  description: \"D1\",\n  image: require(\"../assets/kitty-needs-love.png\")\n}, {\n  id: 2,\n  title: \"T2\",\n  description: \"D2\",\n  image: require(\"../assets/kitty-needs-love.png\")\n}];\n\nfunction MessagesScreen(props) {\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return _jsx(Screen, {\n    children: _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(message) {\n        return message.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          title: item.title,\n          description: item.description,\n          image: item.image,\n          onPress: function onPress() {\n            return console.log(\"Message selected\", item);\n          },\n          renderRightActions: function renderRightActions() {\n            return _jsx(ListItemDeleteAction, {\n              onPress: function onPress() {\n                return handleDelete(item);\n              }\n            });\n          },\n          style: styles.touch\n        });\n      },\n      ItemSeparatorComponent: ListItemSeparator,\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setMessages([{\n          id: 2,\n          title: \"T2\",\n          description: \"D2\",\n          image: require(\"../assets/kitty-needs-love.png\")\n        }]);\n      }\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  touch: {}\n});\nexport default MessagesScreen;","map":{"version":3,"sources":["/Users/joseantoniojuan/Desktop/Universidad/tfg/myApp/app/screens/MessagesScreen.js"],"names":["React","useState","Screen","ListItem","ListItemSeparator","ListItemDeleteAction","initialMessages","id","title","description","image","require","MessagesScreen","props","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","toString","item","console","log","styles","touch","StyleSheet","create"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,oBAAP;;AAEA,IAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,WAAW,EAAE,IAHf;AAIEC,EAAAA,KAAK,EAAEC,OAAO;AAJhB,CADsB,EAOtB;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,IAFT;AAGEC,EAAAA,WAAW,EAAE,IAHf;AAIEC,EAAAA,KAAK,EAAEC,OAAO;AAJhB,CAPsB,CAAxB;;AAeA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,kBAAgCZ,QAAQ,CAACK,eAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoCd,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOe,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAEhCJ,IAAAA,WAAW,CAACD,QAAQ,CAACM,MAAT,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACd,EAAF,KAASY,OAAO,CAACZ,EAAxB;AAAA,KAAhB,CAAD,CAAX;AACD,GAHD;;AAKA,SAEF,KAAC,MAAD;AAAA,cACM,KAAC,QAAD;AACE,MAAA,IAAI,EAAEO,QADR;AAEE,MAAA,YAAY,EAAE,sBAACK,OAAD;AAAA,eAAaA,OAAO,CAACZ,EAAR,CAAWe,QAAX,EAAb;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eACV,KAAC,QAAD;AACE,UAAA,KAAK,EAAEA,IAAI,CAACf,KADd;AAEE,UAAA,WAAW,EAAEe,IAAI,CAACd,WAFpB;AAGE,UAAA,KAAK,EAAEc,IAAI,CAACb,KAHd;AAIE,UAAA,OAAO,EAAE;AAAA,mBAAMc,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC,CAAN;AAAA,WAJX;AAKE,UAAA,kBAAkB,EAAE;AAAA,mBAClB,KAAC,oBAAD;AAAsB,cAAA,OAAO,EAAE;AAAA,uBAAML,YAAY,CAACK,IAAD,CAAlB;AAAA;AAA/B,cADkB;AAAA,WALtB;AAQA,UAAA,KAAK,EAAEG,MAAM,CAACC;AARd,UADU;AAAA,OAHd;AAcE,MAAA,sBAAsB,EAAEvB,iBAd1B;AAeE,MAAA,UAAU,EAAEY,UAfd;AAgBE,MAAA,SAAS,EAAE,qBAAM;AACfD,QAAAA,WAAW,CAAC,CACV;AACER,UAAAA,EAAE,EAAE,CADN;AAEEC,UAAAA,KAAK,EAAE,IAFT;AAGEC,UAAAA,WAAW,EAAE,IAHf;AAIEC,UAAAA,KAAK,EAAEC,OAAO;AAJhB,SADU,CAAD,CAAX;AAQD;AAzBH;AADN,IAFE;AAkCD;;AAED,IAAMe,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,KAAK,EAAE;AADsB,CAAlB,CAAf;AAOA,eAAef,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FlatList, StyleSheet, View } from \"react-native\";\n\nimport Screen from \"../components/Screen\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\n\nconst initialMessages = [\n  {\n    id: 1,\n    title: \"T1\",\n    description: \"D1\",\n    image: require(\"../assets/kitty-needs-love.png\"),\n  },\n  {\n    id: 2,\n    title: \"T2\",\n    description: \"D2\",\n    image: require(\"../assets/kitty-needs-love.png\"),\n  },\n];\n\nfunction MessagesScreen(props) {\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    // Delete the message from messages\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n \n<Screen>\n      <FlatList\n        data={messages}\n        keyExtractor={(message) => message.id.toString()}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            description={item.description}\n            image={item.image}\n            onPress={() => console.log(\"Message selected\", item)}\n            renderRightActions={() => (\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\n            )}\n          style={styles.touch}/>\n        )}\n        ItemSeparatorComponent={ListItemSeparator}\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n              id: 2,\n              title: \"T2\",\n              description: \"D2\",\n              image: require(\"../assets/kitty-needs-love.png\"),\n            },\n          ]);\n        }}\n      />\n    </Screen>\n    \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n    touch: {\n       // flex: 1\n    }\n   \n});\n\nexport default MessagesScreen;\n\n"]},"metadata":{},"sourceType":"module"}